// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BlogPost {
  id             String          @id @default(uuid())
  title          String
  description    String          @default("No description provided.")
  content        String
  featured       String          @default("false")
  createdAt      DateTime        @default(now())
  updatedAt      DateTime        @updatedAt
  blogPostImages BlogPostImage[]
}

model Image {
  id             String          @id // Immich UUID
  status         String
  blogPostImages BlogPostImage[]
}

model BlogPostImage {
  blogPost   BlogPost @relation(fields: [blogPostId], references: [id])
  blogPostId String

  image   Image  @relation(fields: [imageId], references: [id])
  imageId String

  @@id([blogPostId, imageId]) // Composite primary key
}

model User {
  id              String           @id @default(uuid())
  email           String           @unique
  password        String
  username        String           @unique
  first_name      String
  last_name       String
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  role            String           @default("user") // Can be "admin", "user", etc.
  contactMessages ContactMessage[]
}

model ContactMessage {
  id        String   @id @default(uuid())
  name      String
  email     String
  subject   String
  message   String
  userId    String? // Foreign key to User, optional
  createdAt DateTime @default(now())
  read      Boolean  @default(false)

  user User? @relation(fields: [userId], references: [id])
}
